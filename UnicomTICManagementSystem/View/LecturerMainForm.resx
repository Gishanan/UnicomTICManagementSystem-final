<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>